apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-reader
rules:
  - apiGroups: [""]
    resources: ["pods", "services", "deployments"]
    verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: deployment-reader
rules:
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - list
      - get

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pod-reader-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pod-reader
subjects:
  - kind: ServiceAccount
    name: k8stopology-sa
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: deplpoyment-reader-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: deployment-reader
subjects:
  - kind: ServiceAccount
    name: k8stopology-sa
    namespace: default
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8stopology-sa
  namespace: default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: 'ktmonitor-configmap'
data:
  # MONGO_URI: 'mongodb://mongodb:27017'
  POLL_INTERVAL: "3"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ktmonitor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ktmonitor
  template:
    metadata:
      labels:
        app: ktmonitor
    spec:
      serviceAccountName: k8stopology-sa
      containers:
      - name: ktmonitor
        image: ktmonitor
        imagePullPolicy: Never
        envFrom:
        - configMapRef:
            name: 'ktmonitor-configmap'
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: ktmonitor
spec:
  selector:
    app: ktmonitor
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: mongodb
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: mongodb
#   template:
#     metadata:
#       labels:
#         app: mongodb
#     spec:
#       containers:
#       - name: mongodb
#         image: mongo:latest
#         ports:
#         - containerPort: 27017
#         volumeMounts:
#         - name: mongo-data
#           mountPath: /data/db
#       volumes:
#       - name: mongo-data
#         persistentVolumeClaim:
#           claimName: mongo-pvc
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: mongodb
# spec:
#   selector:
#     app: mongodb
#   ports:
#     - protocol: TCP
#       port: 27017
#       targetPort: 27017
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: mongo-pvc
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 1Gi
